{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a706c139-ee3a-4ec4-b7a5-b1d61ecc2d73",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b7025bf1-33ef-4cea-9294-53e51d328f81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Subject</th>\n",
       "      <th>Course</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Avg</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Median</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Percentile (25)</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Percentile (75)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>ECON</td>\n",
       "      <td>101.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>ECON</td>\n",
       "      <td>102.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>ECON</td>\n",
       "      <td>204.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>ECON</td>\n",
       "      <td>205.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>ECON</td>\n",
       "      <td>210.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>POLI</td>\n",
       "      <td>460.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>POLI</td>\n",
       "      <td>463.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>54.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>POLI</td>\n",
       "      <td>464.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>POLI</td>\n",
       "      <td>465.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>2020.0</td>\n",
       "      <td>POLI</td>\n",
       "      <td>492.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>222 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Year Subject Course   Avg        Median        Percentile (25)         \\\n",
       "                            mean median   mean median            mean median   \n",
       "0    2020.0    ECON  101.0  72.0   73.0   15.0   15.0            99.0   99.0   \n",
       "1    2020.0    ECON  102.0  72.0   72.0   16.0   16.0            97.0   98.0   \n",
       "2    2020.0    ECON  204.0  64.0   64.0   16.0   16.0            99.0   99.0   \n",
       "3    2020.0    ECON  205.0  70.0   70.0   13.0   13.0            98.0   98.0   \n",
       "4    2020.0    ECON  210.0  77.0   77.0    8.0    8.0            93.0   93.0   \n",
       "..      ...     ...    ...   ...    ...    ...    ...             ...    ...   \n",
       "217  2020.0    POLI  460.0  83.0   83.0    9.0    9.0            90.0   90.0   \n",
       "218  2020.0    POLI  463.0  83.0   82.0    8.0    8.0            90.0   90.0   \n",
       "219  2020.0    POLI  464.0  83.0   83.0    9.0    9.0            93.0   93.0   \n",
       "220  2020.0    POLI  465.0  82.0   82.0    7.0    7.0            96.0   96.0   \n",
       "221  2020.0    POLI  492.0  86.0   86.0    4.0    4.0            92.0   92.0   \n",
       "\n",
       "    Percentile (75)         \n",
       "               mean median  \n",
       "0               7.0    0.0  \n",
       "1               6.0    0.0  \n",
       "2               4.0    4.0  \n",
       "3              18.0   18.0  \n",
       "4              56.0   56.0  \n",
       "..              ...    ...  \n",
       "217            43.0   43.0  \n",
       "218            60.0   54.0  \n",
       "219            59.0   61.0  \n",
       "220            64.0   64.0  \n",
       "221            75.0   75.0  \n",
       "\n",
       "[222 rows x 11 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('../../data/processed/processeddata.csv')\n",
    "\n",
    "def preprocess_data(df, columns_to_drop):\n",
    "    processed_df = (\n",
    "        df\n",
    "        .drop(columns=columns_to_drop)  # Drop unnecessary columns\n",
    "        .query(\"Year >= 2020 & Year < 2021\")  # Filter data for years 2020\n",
    "        .groupby(['Year', 'Subject', 'Course'])  # Group data by year, subject, and course\n",
    "        .agg({\n",
    "            'Avg': ['mean', 'median'],  # Calculate the mean and median of the average grades\n",
    "            'Median': ['mean', 'median'],  # Calculate the mean and median of the median grades\n",
    "            'Percentile (25)': ['mean', 'median'],  # Calculate the mean and median of the 25th percentile\n",
    "            'Percentile (75)': ['mean', 'median'],  # Calculate the mean and median of the 75th percentile\n",
    "        })\n",
    "        .round(0)  # Round the summary statistics to the nearest whole number\n",
    "        .sort_values(by=['Year', 'Subject', 'Course'])  # Sort the DataFrame by year, subject, and course\n",
    "        .reset_index()  # Reset the index\n",
    "    )\n",
    "# Wrap your method chain in a function\n",
    "    return processed_df\n",
    "# Load the dataset\n",
    "df = pd.read_csv('../../data/processed/processeddata.csv')\n",
    "\n",
    "\n",
    "# Define the columns to drop\n",
    "columns_to_drop = ['Section']\n",
    "\n",
    "# Call the preprocess_data function\n",
    "processed_df = preprocess_data(df, columns_to_drop)\n",
    "\n",
    "# Print the processed DataFrame\n",
    "processed_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15736242-b7f4-47c3-9798-0e081ac882f0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
